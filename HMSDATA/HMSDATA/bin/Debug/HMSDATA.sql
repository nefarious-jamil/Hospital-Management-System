/*
Deployment script for HospitalDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HospitalDB"
:setvar DefaultFilePrefix "HospitalDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[Doctor]...';


GO
ALTER TABLE [dbo].[Doctor] ALTER COLUMN [BirthDate] NVARCHAR (100) NOT NULL;

ALTER TABLE [dbo].[Doctor] ALTER COLUMN [Degree] NVARCHAR (100) NULL;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
MERGE INTO Doctor AS Target
USING (VALUES 
(1, 'Rafiq', 'Mohammad', '19/12/1974', 'MBBS'),
(2, 'Salm', 'Mohammad', '29/10/1954', 'MBBS'),
(3, 'Jobbar', 'Mohammad', '7/12/1967', 'FCPS')
)
AS Source (DoctorID, LastName, FirstName, BirthDate, Degree)
ON Target.DoctorID = Source.DoctorID
WHEN NOT MATCHED BY TARGET THEN
INSERT (LastName, FirstName, BirthDate, Degree)
VALUES (LastName, FirstName, BirthDate, Degree);


MERGE INTO Expertise AS Target
USING (VALUES 
(1, 'Medicine'),
(2, 'ENT'),
(3, 'Gastrology')
)
AS Source (ExpertiseID, Speciality)
ON Target.ExpertiseID = Source.ExpertiseID
WHEN NOT MATCHED BY TARGET THEN
INSERT (Speciality)
VALUES (Speciality);

GO

GO
PRINT N'Update complete.';


GO
